# Default HTTP server configuration
server {
    listen 80 default_server;          # Listen on port 80 (HTTP)
    listen [::]:80 default_server;     # Support IPv6 connections

    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri; # Redirect to the same host but enforce HTTPS
}

# HTTPS server block for your domain
server {
    listen 443 ssl;                    # Listen on port 443 (HTTPS)
    listen [::]:443 ssl;               # Support IPv6 connections

    # Specify your domain names (Replace placeholders with your actual domain)
    server_name www.example.com example.com;

    # SSL Certificates (Replace placeholders with actual paths)
    ssl_certificate /path/to/your/fullchain.pem; # Full path to SSL certificate
    ssl_certificate_key /path/to/your/privkey.pem; # Full path to SSL private key
    include /etc/letsencrypt/options-ssl-nginx.conf; # Recommended settings from Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;   # DH params for enhanced security

    # Security Headers for protection
    add_header X-Frame-Options SAMEORIGIN;            # Prevent clickjacking attacks
    add_header X-Content-Type-Options nosniff;        # Prevent MIME type sniffing
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; # Enforce HTTPS

    # Increase request body size for large payloads (e.g., file uploads)
    client_max_body_size 10M;

    # Reverse Proxy to Node.js application
    location / {
        proxy_pass http://127.0.0.1:3000; # Replace with your Node.js server address and port
        proxy_http_version 1.1;           # Use HTTP/1.1 for WebSocket support
        proxy_set_header Upgrade $http_upgrade; # Enable WebSocket upgrades
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;      # Forward the original Host header
        proxy_cache_bypass $http_upgrade; # Bypass cache for WebSocket connections
    }

    # Health Check Endpoint (Optional)
    location /health {
        proxy_pass http://127.0.0.1:3000/health; # Replace with your health check endpoint
    }

    # Static Files (Optional)
    location /static/ {
        root /var/www/html;               # Path to your static files
        expires 1y;                       # Cache static files for 1 year
        add_header Cache-Control "public, immutable"; # Cache-control headers
    }

    # Logging (Optional)
    error_log /var/log/nginx/domtech_error.log;    # Error log path
    access_log /var/log/nginx/domtech_access.log;  # Access log path
}

# Redirect all non-WWW traffic to HTTPS
server {
    listen 80;                          # Listen on port 80 (HTTP)
    listen [::]:80;                     # Support IPv6 connections

    # Specify your domain names (Replace placeholders with your actual domain)
    server_name www.example.com example.com;

    # Redirect to HTTPS
    return 301 https://$host$request_uri;
}